// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Prediction,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.685200,HLS_SYN_LAT=3828776,HLS_SYN_TPT=none,HLS_SYN_MEM=50,HLS_SYN_DSP=54,HLS_SYN_FF=10287,HLS_SYN_LUT=16930,HLS_VERSION=2019_1}" *)

module Prediction (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_address0,
        image_r_ce0,
        image_r_q0,
        w_conv1_address0,
        w_conv1_ce0,
        w_conv1_q0,
        w_conv2_address0,
        w_conv2_ce0,
        w_conv2_q0,
        w_fc1_address0,
        w_fc1_ce0,
        w_fc1_q0,
        w_fc2_address0,
        w_fc2_ce0,
        w_fc2_q0,
        w_fc3_address0,
        w_fc3_ce0,
        w_fc3_q0,
        b_conv1_address0,
        b_conv1_ce0,
        b_conv1_q0,
        b_conv2_address0,
        b_conv2_ce0,
        b_conv2_q0,
        b_fc1_address0,
        b_fc1_ce0,
        b_fc1_q0,
        b_fc2_address0,
        b_fc2_ce0,
        b_fc2_q0,
        b_fc3_address0,
        b_fc3_ce0,
        b_fc3_q0,
        probs_address0,
        probs_ce0,
        probs_we0,
        probs_d0
);

parameter    ap_ST_fsm_state1 = 178'd1;
parameter    ap_ST_fsm_state2 = 178'd2;
parameter    ap_ST_fsm_state3 = 178'd4;
parameter    ap_ST_fsm_state4 = 178'd8;
parameter    ap_ST_fsm_state5 = 178'd16;
parameter    ap_ST_fsm_state6 = 178'd32;
parameter    ap_ST_fsm_state7 = 178'd64;
parameter    ap_ST_fsm_state8 = 178'd128;
parameter    ap_ST_fsm_state9 = 178'd256;
parameter    ap_ST_fsm_state10 = 178'd512;
parameter    ap_ST_fsm_state11 = 178'd1024;
parameter    ap_ST_fsm_state12 = 178'd2048;
parameter    ap_ST_fsm_state13 = 178'd4096;
parameter    ap_ST_fsm_state14 = 178'd8192;
parameter    ap_ST_fsm_state15 = 178'd16384;
parameter    ap_ST_fsm_state16 = 178'd32768;
parameter    ap_ST_fsm_state17 = 178'd65536;
parameter    ap_ST_fsm_state18 = 178'd131072;
parameter    ap_ST_fsm_state19 = 178'd262144;
parameter    ap_ST_fsm_state20 = 178'd524288;
parameter    ap_ST_fsm_state21 = 178'd1048576;
parameter    ap_ST_fsm_state22 = 178'd2097152;
parameter    ap_ST_fsm_state23 = 178'd4194304;
parameter    ap_ST_fsm_state24 = 178'd8388608;
parameter    ap_ST_fsm_state25 = 178'd16777216;
parameter    ap_ST_fsm_state26 = 178'd33554432;
parameter    ap_ST_fsm_state27 = 178'd67108864;
parameter    ap_ST_fsm_state28 = 178'd134217728;
parameter    ap_ST_fsm_state29 = 178'd268435456;
parameter    ap_ST_fsm_state30 = 178'd536870912;
parameter    ap_ST_fsm_state31 = 178'd1073741824;
parameter    ap_ST_fsm_state32 = 178'd2147483648;
parameter    ap_ST_fsm_state33 = 178'd4294967296;
parameter    ap_ST_fsm_state34 = 178'd8589934592;
parameter    ap_ST_fsm_state35 = 178'd17179869184;
parameter    ap_ST_fsm_state36 = 178'd34359738368;
parameter    ap_ST_fsm_state37 = 178'd68719476736;
parameter    ap_ST_fsm_state38 = 178'd137438953472;
parameter    ap_ST_fsm_state39 = 178'd274877906944;
parameter    ap_ST_fsm_state40 = 178'd549755813888;
parameter    ap_ST_fsm_state41 = 178'd1099511627776;
parameter    ap_ST_fsm_state42 = 178'd2199023255552;
parameter    ap_ST_fsm_state43 = 178'd4398046511104;
parameter    ap_ST_fsm_state44 = 178'd8796093022208;
parameter    ap_ST_fsm_state45 = 178'd17592186044416;
parameter    ap_ST_fsm_state46 = 178'd35184372088832;
parameter    ap_ST_fsm_state47 = 178'd70368744177664;
parameter    ap_ST_fsm_state48 = 178'd140737488355328;
parameter    ap_ST_fsm_state49 = 178'd281474976710656;
parameter    ap_ST_fsm_state50 = 178'd562949953421312;
parameter    ap_ST_fsm_state51 = 178'd1125899906842624;
parameter    ap_ST_fsm_state52 = 178'd2251799813685248;
parameter    ap_ST_fsm_state53 = 178'd4503599627370496;
parameter    ap_ST_fsm_state54 = 178'd9007199254740992;
parameter    ap_ST_fsm_state55 = 178'd18014398509481984;
parameter    ap_ST_fsm_state56 = 178'd36028797018963968;
parameter    ap_ST_fsm_state57 = 178'd72057594037927936;
parameter    ap_ST_fsm_state58 = 178'd144115188075855872;
parameter    ap_ST_fsm_state59 = 178'd288230376151711744;
parameter    ap_ST_fsm_state60 = 178'd576460752303423488;
parameter    ap_ST_fsm_state61 = 178'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 178'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 178'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 178'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 178'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 178'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 178'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 178'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 178'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 178'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 178'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 178'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 178'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 178'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 178'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 178'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 178'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 178'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 178'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 178'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 178'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 178'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 178'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 178'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 178'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 178'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 178'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 178'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 178'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 178'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 178'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 178'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 178'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 178'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 178'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 178'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 178'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 178'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 178'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 178'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 178'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 178'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 178'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 178'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 178'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 178'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 178'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 178'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 178'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 178'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 178'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 178'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 178'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 178'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 178'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 178'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 178'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 178'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 178'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 178'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 178'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 178'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 178'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 178'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 178'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 178'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 178'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 178'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 178'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 178'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 178'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 178'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 178'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 178'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 178'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 178'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 178'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 178'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 178'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 178'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 178'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 178'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 178'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 178'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 178'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 178'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 178'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 178'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 178'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 178'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 178'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 178'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 178'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 178'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 178'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 178'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 178'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 178'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 178'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 178'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 178'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 178'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 178'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 178'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 178'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 178'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 178'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 178'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 178'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 178'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 178'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 178'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 178'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 178'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 178'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 178'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 178'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 178'd191561942608236107294793378393788647952342390272950272;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] image_r_address0;
output   image_r_ce0;
input  [31:0] image_r_q0;
output  [2:0] w_conv1_address0;
output   w_conv1_ce0;
input  [31:0] w_conv1_q0;
output  [11:0] w_conv2_address0;
output   w_conv2_ce0;
input  [31:0] w_conv2_q0;
output  [15:0] w_fc1_address0;
output   w_fc1_ce0;
input  [31:0] w_fc1_q0;
output  [13:0] w_fc2_address0;
output   w_fc2_ce0;
input  [31:0] w_fc2_q0;
output  [9:0] w_fc3_address0;
output   w_fc3_ce0;
input  [31:0] w_fc3_q0;
output  [2:0] b_conv1_address0;
output   b_conv1_ce0;
input  [31:0] b_conv1_q0;
output  [3:0] b_conv2_address0;
output   b_conv2_ce0;
input  [31:0] b_conv2_q0;
output  [6:0] b_fc1_address0;
output   b_fc1_ce0;
input  [31:0] b_fc1_q0;
output  [6:0] b_fc2_address0;
output   b_fc2_ce0;
input  [31:0] b_fc2_q0;
output  [3:0] b_fc3_address0;
output   b_fc3_ce0;
input  [31:0] b_fc3_q0;
output  [3:0] probs_address0;
output   probs_ce0;
output   probs_we0;
output  [31:0] probs_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] w_fc1_address0;
reg w_fc1_ce0;
reg[13:0] w_fc2_address0;
reg w_fc2_ce0;
reg[9:0] w_fc3_address0;
reg w_fc3_ce0;
reg b_fc1_ce0;
reg b_fc2_ce0;
reg b_fc3_ce0;
reg probs_ce0;
reg probs_we0;

(* fsm_encoding = "none" *) reg   [177:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_647;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state29;
wire   [31:0] grp_fu_613_p2;
reg   [31:0] reg_652;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state33;
reg   [0:0] icmp_ln105_reg_1187;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state61;
reg   [0:0] icmp_ln122_reg_1286;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state89;
reg   [0:0] icmp_ln139_reg_1385;
wire   [31:0] grp_fu_609_p2;
reg   [31:0] reg_658;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state83;
wire   [31:0] o_fc1_q0;
reg   [31:0] reg_662;
wire    ap_CS_fsm_state41;
reg   [31:0] reg_668;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state57;
wire   [31:0] o_fc2_q0;
reg   [31:0] reg_673;
wire    ap_CS_fsm_state69;
reg   [31:0] reg_679;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state85;
wire   [31:0] o_fc3_q0;
reg   [31:0] reg_684;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state126;
wire   [63:0] grp_fu_621_p1;
reg   [63:0] reg_690;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state116;
wire    ap_CS_fsm_state124;
wire   [63:0] grp_fu_642_p2;
reg   [63:0] reg_697;
wire    ap_CS_fsm_state145;
wire    ap_CS_fsm_state15;
wire   [31:0] o_flatten_q0;
reg   [31:0] o_flatten_load_reg_1141;
wire    ap_CS_fsm_state16;
wire   [15:0] add_ln103_fu_708_p2;
reg   [15:0] add_ln103_reg_1146;
wire    ap_CS_fsm_state17;
wire   [6:0] i_1_fu_720_p2;
reg   [6:0] i_1_reg_1154;
wire   [0:0] icmp_ln103_fu_714_p2;
wire    ap_CS_fsm_state21;
reg   [6:0] o_fc1_addr_reg_1169;
reg   [31:0] b_fc1_load_reg_1174;
wire   [8:0] j_fu_738_p2;
reg   [8:0] j_reg_1182;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln105_fu_744_p2;
wire   [0:0] icmp_ln104_fu_732_p2;
reg   [31:0] o_flatten_load_1_reg_1202;
wire   [31:0] select_ln105_fu_770_p3;
reg   [31:0] select_ln105_reg_1207;
wire    ap_CS_fsm_state38;
wire   [6:0] i_fu_783_p2;
reg   [6:0] i_reg_1215;
wire    ap_CS_fsm_state40;
wire   [63:0] zext_ln114_fu_789_p1;
reg   [63:0] zext_ln114_reg_1220;
wire   [0:0] icmp_ln113_fu_777_p2;
wire   [0:0] grp_fu_627_p2;
reg   [0:0] tmp_4_reg_1235;
wire    ap_CS_fsm_state42;
wire   [31:0] o_relu3_q0;
reg   [31:0] o_relu3_load_reg_1240;
wire    ap_CS_fsm_state44;
wire   [6:0] i_3_fu_850_p2;
reg   [6:0] i_3_reg_1248;
wire    ap_CS_fsm_state45;
wire  signed [14:0] sub_ln122_fu_880_p2;
reg  signed [14:0] sub_ln122_reg_1253;
wire   [0:0] icmp_ln120_fu_844_p2;
wire    ap_CS_fsm_state49;
reg   [6:0] o_fc2_addr_reg_1268;
reg   [31:0] b_fc2_load_reg_1273;
wire   [6:0] j_1_fu_903_p2;
reg   [6:0] j_1_reg_1281;
wire    ap_CS_fsm_state56;
wire   [0:0] icmp_ln122_fu_909_p2;
wire   [0:0] icmp_ln121_fu_897_p2;
reg   [31:0] o_relu3_load_1_reg_1301;
wire   [31:0] select_ln122_fu_934_p3;
reg   [31:0] select_ln122_reg_1306;
wire    ap_CS_fsm_state66;
wire   [6:0] i_7_fu_947_p2;
reg   [6:0] i_7_reg_1314;
wire    ap_CS_fsm_state68;
wire   [63:0] zext_ln131_fu_953_p1;
reg   [63:0] zext_ln131_reg_1319;
wire   [0:0] icmp_ln130_fu_941_p2;
reg   [0:0] tmp_6_reg_1334;
wire    ap_CS_fsm_state70;
wire   [31:0] o_relu4_q0;
reg   [31:0] o_relu4_load_reg_1339;
wire    ap_CS_fsm_state72;
wire   [9:0] add_ln137_fu_1013_p2;
reg   [9:0] add_ln137_reg_1344;
wire    ap_CS_fsm_state73;
wire   [3:0] i_8_fu_1025_p2;
reg   [3:0] i_8_reg_1352;
wire   [0:0] icmp_ln137_fu_1019_p2;
wire    ap_CS_fsm_state77;
reg   [3:0] o_fc3_addr_reg_1367;
reg   [31:0] b_fc3_load_reg_1372;
wire   [6:0] j_2_fu_1043_p2;
reg   [6:0] j_2_reg_1380;
wire    ap_CS_fsm_state84;
wire   [0:0] icmp_ln139_fu_1049_p2;
wire   [0:0] icmp_ln138_fu_1037_p2;
reg   [31:0] o_relu4_load_1_reg_1400;
wire   [31:0] select_ln139_fu_1075_p3;
reg   [31:0] select_ln139_reg_1405;
wire    ap_CS_fsm_state94;
wire   [3:0] i_9_fu_1088_p2;
reg   [3:0] i_9_reg_1413;
wire    ap_CS_fsm_state96;
wire   [0:0] icmp_ln148_fu_1082_p2;
wire   [63:0] grp_fu_634_p2;
reg   [63:0] tmp_4_i_reg_1423;
wire    ap_CS_fsm_state121;
wire   [31:0] grp_fu_617_p1;
wire    ap_CS_fsm_state123;
wire   [3:0] i_10_fu_1105_p2;
reg   [3:0] i_10_reg_1436;
wire    ap_CS_fsm_state125;
wire   [63:0] zext_ln152_fu_1111_p1;
reg   [63:0] zext_ln152_reg_1441;
wire   [0:0] icmp_ln151_fu_1099_p2;
reg   [63:0] tmp_6_i_reg_1451;
wire    ap_CS_fsm_state127;
wire   [62:0] trunc_ln368_fu_1120_p1;
reg   [62:0] trunc_ln368_reg_1456;
wire    ap_CS_fsm_state176;
wire   [63:0] bitcast_ln512_fu_1131_p1;
wire    ap_CS_fsm_state177;
reg   [12:0] o_conv1_address0;
reg    o_conv1_ce0;
reg    o_conv1_we0;
wire   [31:0] o_conv1_q0;
reg   [12:0] o_relu1_address0;
reg    o_relu1_ce0;
reg    o_relu1_we0;
wire   [31:0] o_relu1_q0;
reg    o_relu1_ce1;
wire   [31:0] o_relu1_q1;
reg   [10:0] o_avgpooling1_address0;
reg    o_avgpooling1_ce0;
reg    o_avgpooling1_we0;
wire   [31:0] o_avgpooling1_q0;
reg   [10:0] o_conv2_address0;
reg    o_conv2_ce0;
reg    o_conv2_we0;
wire   [31:0] o_conv2_q0;
reg   [10:0] o_relu2_address0;
reg    o_relu2_ce0;
reg    o_relu2_we0;
wire   [31:0] o_relu2_q0;
reg    o_relu2_ce1;
wire   [31:0] o_relu2_q1;
reg   [8:0] o_avgpooling2_address0;
reg    o_avgpooling2_ce0;
reg    o_avgpooling2_we0;
wire   [31:0] o_avgpooling2_q0;
reg   [8:0] o_flatten_address0;
reg    o_flatten_ce0;
reg    o_flatten_we0;
reg   [6:0] o_fc1_address0;
reg    o_fc1_ce0;
reg    o_fc1_we0;
reg   [6:0] o_relu3_address0;
reg    o_relu3_ce0;
reg    o_relu3_we0;
wire   [31:0] o_relu3_d0;
reg   [6:0] o_fc2_address0;
reg    o_fc2_ce0;
reg    o_fc2_we0;
reg   [6:0] o_relu4_address0;
reg    o_relu4_ce0;
reg    o_relu4_we0;
wire   [31:0] o_relu4_d0;
reg   [3:0] o_fc3_address0;
reg    o_fc3_ce0;
reg    o_fc3_we0;
wire    grp_conv2_fu_557_ap_start;
wire    grp_conv2_fu_557_ap_done;
wire    grp_conv2_fu_557_ap_idle;
wire    grp_conv2_fu_557_ap_ready;
wire   [10:0] grp_conv2_fu_557_in_r_address0;
wire    grp_conv2_fu_557_in_r_ce0;
wire   [11:0] grp_conv2_fu_557_kernel_address0;
wire    grp_conv2_fu_557_kernel_ce0;
wire   [3:0] grp_conv2_fu_557_bias_address0;
wire    grp_conv2_fu_557_bias_ce0;
wire   [10:0] grp_conv2_fu_557_out_r_address0;
wire    grp_conv2_fu_557_out_r_ce0;
wire    grp_conv2_fu_557_out_r_we0;
wire   [31:0] grp_conv2_fu_557_out_r_d0;
wire    grp_avgpooling1_fu_567_ap_start;
wire    grp_avgpooling1_fu_567_ap_done;
wire    grp_avgpooling1_fu_567_ap_idle;
wire    grp_avgpooling1_fu_567_ap_ready;
wire   [12:0] grp_avgpooling1_fu_567_in_r_address0;
wire    grp_avgpooling1_fu_567_in_r_ce0;
wire   [12:0] grp_avgpooling1_fu_567_in_r_address1;
wire    grp_avgpooling1_fu_567_in_r_ce1;
wire   [10:0] grp_avgpooling1_fu_567_out_r_address0;
wire    grp_avgpooling1_fu_567_out_r_ce0;
wire    grp_avgpooling1_fu_567_out_r_we0;
wire   [31:0] grp_avgpooling1_fu_567_out_r_d0;
wire    grp_avgpooling2_fu_573_ap_start;
wire    grp_avgpooling2_fu_573_ap_done;
wire    grp_avgpooling2_fu_573_ap_idle;
wire    grp_avgpooling2_fu_573_ap_ready;
wire   [10:0] grp_avgpooling2_fu_573_in_r_address0;
wire    grp_avgpooling2_fu_573_in_r_ce0;
wire   [10:0] grp_avgpooling2_fu_573_in_r_address1;
wire    grp_avgpooling2_fu_573_in_r_ce1;
wire   [8:0] grp_avgpooling2_fu_573_out_r_address0;
wire    grp_avgpooling2_fu_573_out_r_ce0;
wire    grp_avgpooling2_fu_573_out_r_we0;
wire   [31:0] grp_avgpooling2_fu_573_out_r_d0;
wire    grp_conv1_fu_579_ap_start;
wire    grp_conv1_fu_579_ap_done;
wire    grp_conv1_fu_579_ap_idle;
wire    grp_conv1_fu_579_ap_ready;
wire   [9:0] grp_conv1_fu_579_in_r_address0;
wire    grp_conv1_fu_579_in_r_ce0;
wire   [2:0] grp_conv1_fu_579_kernel_address0;
wire    grp_conv1_fu_579_kernel_ce0;
wire   [2:0] grp_conv1_fu_579_bias_address0;
wire    grp_conv1_fu_579_bias_ce0;
wire   [12:0] grp_conv1_fu_579_out_r_address0;
wire    grp_conv1_fu_579_out_r_ce0;
wire    grp_conv1_fu_579_out_r_we0;
wire   [31:0] grp_conv1_fu_579_out_r_d0;
wire    grp_relu1_fu_591_ap_start;
wire    grp_relu1_fu_591_ap_done;
wire    grp_relu1_fu_591_ap_idle;
wire    grp_relu1_fu_591_ap_ready;
wire   [12:0] grp_relu1_fu_591_in_r_address0;
wire    grp_relu1_fu_591_in_r_ce0;
wire   [12:0] grp_relu1_fu_591_out_r_address0;
wire    grp_relu1_fu_591_out_r_ce0;
wire    grp_relu1_fu_591_out_r_we0;
wire   [31:0] grp_relu1_fu_591_out_r_d0;
wire    grp_relu2_fu_597_ap_start;
wire    grp_relu2_fu_597_ap_done;
wire    grp_relu2_fu_597_ap_idle;
wire    grp_relu2_fu_597_ap_ready;
wire   [10:0] grp_relu2_fu_597_in_r_address0;
wire    grp_relu2_fu_597_in_r_ce0;
wire   [10:0] grp_relu2_fu_597_out_r_address0;
wire    grp_relu2_fu_597_out_r_ce0;
wire    grp_relu2_fu_597_out_r_we0;
wire   [31:0] grp_relu2_fu_597_out_r_d0;
wire    grp_flatten_fu_603_ap_start;
wire    grp_flatten_fu_603_ap_done;
wire    grp_flatten_fu_603_ap_idle;
wire    grp_flatten_fu_603_ap_ready;
wire   [8:0] grp_flatten_fu_603_in_r_address0;
wire    grp_flatten_fu_603_in_r_ce0;
wire   [8:0] grp_flatten_fu_603_out_r_address0;
wire    grp_flatten_fu_603_out_r_ce0;
wire    grp_flatten_fu_603_out_r_we0;
wire   [31:0] grp_flatten_fu_603_out_r_d0;
reg   [6:0] i_0_i1_reg_408;
reg   [15:0] phi_mul_reg_420;
reg   [8:0] j_0_i_reg_432;
wire    ap_CS_fsm_state39;
reg   [6:0] i_0_i_reg_443;
wire    ap_CS_fsm_state43;
reg   [6:0] i_0_i8_reg_454;
reg   [6:0] j_0_i13_reg_466;
wire    ap_CS_fsm_state67;
reg   [6:0] i_0_i12_reg_477;
wire    ap_CS_fsm_state71;
reg   [3:0] i_0_i28_reg_488;
reg   [9:0] phi_mul2_reg_500;
reg   [6:0] j_0_i33_reg_512;
wire    ap_CS_fsm_state95;
reg   [3:0] i_0_i19_reg_523;
wire   [31:0] ap_phi_mux_sum_0_i_phi_fu_538_p4;
reg   [31:0] sum_0_i_reg_534;
reg   [3:0] i_1_i_reg_546;
wire    ap_CS_fsm_state178;
reg    grp_conv2_fu_557_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_avgpooling1_fu_567_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_avgpooling2_fu_573_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_conv1_fu_579_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_relu1_fu_591_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_relu2_fu_597_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_flatten_fu_603_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln103_fu_703_p1;
wire   [63:0] zext_ln105_fu_726_p1;
wire   [63:0] zext_ln106_2_fu_765_p1;
wire   [63:0] zext_ln106_fu_750_p1;
wire  signed [63:0] sext_ln122_fu_886_p1;
wire   [63:0] zext_ln122_fu_891_p1;
wire  signed [63:0] sext_ln123_fu_929_p1;
wire   [63:0] zext_ln123_fu_915_p1;
wire   [63:0] zext_ln137_fu_1008_p1;
wire   [63:0] zext_ln139_fu_1031_p1;
wire   [63:0] zext_ln140_2_fu_1070_p1;
wire   [63:0] zext_ln140_fu_1055_p1;
wire   [63:0] zext_ln149_fu_1094_p1;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state88;
reg   [31:0] grp_fu_609_p0;
reg   [31:0] grp_fu_609_p1;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state90;
reg   [31:0] grp_fu_613_p0;
reg   [31:0] grp_fu_613_p1;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state86;
reg   [63:0] grp_fu_617_p0;
wire    ap_CS_fsm_state122;
reg   [31:0] grp_fu_621_p0;
wire    ap_CS_fsm_state115;
reg   [31:0] grp_fu_627_p0;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state146;
reg   [63:0] grp_fu_642_p1;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state128;
wire   [15:0] zext_ln106_1_fu_755_p1;
wire   [15:0] add_ln106_fu_759_p2;
wire   [31:0] bitcast_ln114_fu_794_p1;
wire   [7:0] tmp_3_fu_798_p4;
wire   [22:0] trunc_ln114_fu_808_p1;
wire   [0:0] icmp_ln114_1_fu_818_p2;
wire   [0:0] icmp_ln114_fu_812_p2;
wire   [0:0] or_ln114_fu_824_p2;
wire   [0:0] and_ln114_fu_830_p2;
wire   [13:0] tmp_s_fu_856_p3;
wire   [9:0] tmp_15_fu_868_p3;
wire   [14:0] zext_ln122_1_fu_864_p1;
wire   [14:0] zext_ln122_2_fu_876_p1;
wire   [14:0] zext_ln123_1_fu_920_p1;
wire   [14:0] add_ln123_fu_924_p2;
wire   [31:0] bitcast_ln131_fu_958_p1;
wire   [7:0] tmp_5_fu_962_p4;
wire   [22:0] trunc_ln131_fu_972_p1;
wire   [0:0] icmp_ln131_1_fu_982_p2;
wire   [0:0] icmp_ln131_fu_976_p2;
wire   [0:0] or_ln131_fu_988_p2;
wire   [0:0] and_ln131_fu_994_p2;
wire   [9:0] zext_ln140_1_fu_1060_p1;
wire   [9:0] add_ln140_fu_1064_p2;
wire   [63:0] grp_fu_638_p2;
wire   [63:0] p_Val2_s_fu_1116_p1;
wire   [63:0] p_Result_s_fu_1124_p3;
reg   [177:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 178'd1;
#0 grp_conv2_fu_557_ap_start_reg = 1'b0;
#0 grp_avgpooling1_fu_567_ap_start_reg = 1'b0;
#0 grp_avgpooling2_fu_573_ap_start_reg = 1'b0;
#0 grp_conv1_fu_579_ap_start_reg = 1'b0;
#0 grp_relu1_fu_591_ap_start_reg = 1'b0;
#0 grp_relu2_fu_597_ap_start_reg = 1'b0;
#0 grp_flatten_fu_603_ap_start_reg = 1'b0;
end

Prediction_o_conv1 #(
    .DataWidth( 32 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
o_conv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_conv1_address0),
    .ce0(o_conv1_ce0),
    .we0(o_conv1_we0),
    .d0(grp_conv1_fu_579_out_r_d0),
    .q0(o_conv1_q0)
);

Prediction_o_relu1 #(
    .DataWidth( 32 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
o_relu1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_relu1_address0),
    .ce0(o_relu1_ce0),
    .we0(o_relu1_we0),
    .d0(grp_relu1_fu_591_out_r_d0),
    .q0(o_relu1_q0),
    .address1(grp_avgpooling1_fu_567_in_r_address1),
    .ce1(o_relu1_ce1),
    .q1(o_relu1_q1)
);

Prediction_o_avgpeOg #(
    .DataWidth( 32 ),
    .AddressRange( 1176 ),
    .AddressWidth( 11 ))
o_avgpooling1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_avgpooling1_address0),
    .ce0(o_avgpooling1_ce0),
    .we0(o_avgpooling1_we0),
    .d0(grp_avgpooling1_fu_567_out_r_d0),
    .q0(o_avgpooling1_q0)
);

Prediction_o_conv2 #(
    .DataWidth( 32 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
o_conv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_conv2_address0),
    .ce0(o_conv2_ce0),
    .we0(o_conv2_we0),
    .d0(grp_conv2_fu_557_out_r_d0),
    .q0(o_conv2_q0)
);

Prediction_o_relu2 #(
    .DataWidth( 32 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
o_relu2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_relu2_address0),
    .ce0(o_relu2_ce0),
    .we0(o_relu2_we0),
    .d0(grp_relu2_fu_597_out_r_d0),
    .q0(o_relu2_q0),
    .address1(grp_avgpooling2_fu_573_in_r_address1),
    .ce1(o_relu2_ce1),
    .q1(o_relu2_q1)
);

Prediction_o_avgpfYi #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
o_avgpooling2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_avgpooling2_address0),
    .ce0(o_avgpooling2_ce0),
    .we0(o_avgpooling2_we0),
    .d0(grp_avgpooling2_fu_573_out_r_d0),
    .q0(o_avgpooling2_q0)
);

Prediction_o_avgpfYi #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
o_flatten_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_flatten_address0),
    .ce0(o_flatten_ce0),
    .we0(o_flatten_we0),
    .d0(grp_flatten_fu_603_out_r_d0),
    .q0(o_flatten_q0)
);

Prediction_o_fc1 #(
    .DataWidth( 32 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
o_fc1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_fc1_address0),
    .ce0(o_fc1_ce0),
    .we0(o_fc1_we0),
    .d0(select_ln105_reg_1207),
    .q0(o_fc1_q0)
);

Prediction_o_fc1 #(
    .DataWidth( 32 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
o_relu3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_relu3_address0),
    .ce0(o_relu3_ce0),
    .we0(o_relu3_we0),
    .d0(o_relu3_d0),
    .q0(o_relu3_q0)
);

Prediction_o_fc2 #(
    .DataWidth( 32 ),
    .AddressRange( 84 ),
    .AddressWidth( 7 ))
o_fc2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_fc2_address0),
    .ce0(o_fc2_ce0),
    .we0(o_fc2_we0),
    .d0(select_ln122_reg_1306),
    .q0(o_fc2_q0)
);

Prediction_o_fc2 #(
    .DataWidth( 32 ),
    .AddressRange( 84 ),
    .AddressWidth( 7 ))
o_relu4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_relu4_address0),
    .ce0(o_relu4_ce0),
    .we0(o_relu4_we0),
    .d0(o_relu4_d0),
    .q0(o_relu4_q0)
);

Prediction_o_fc3 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
o_fc3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(o_fc3_address0),
    .ce0(o_fc3_ce0),
    .we0(o_fc3_we0),
    .d0(select_ln139_reg_1405),
    .q0(o_fc3_q0)
);

conv2 grp_conv2_fu_557(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv2_fu_557_ap_start),
    .ap_done(grp_conv2_fu_557_ap_done),
    .ap_idle(grp_conv2_fu_557_ap_idle),
    .ap_ready(grp_conv2_fu_557_ap_ready),
    .in_r_address0(grp_conv2_fu_557_in_r_address0),
    .in_r_ce0(grp_conv2_fu_557_in_r_ce0),
    .in_r_q0(o_avgpooling1_q0),
    .kernel_address0(grp_conv2_fu_557_kernel_address0),
    .kernel_ce0(grp_conv2_fu_557_kernel_ce0),
    .kernel_q0(w_conv2_q0),
    .bias_address0(grp_conv2_fu_557_bias_address0),
    .bias_ce0(grp_conv2_fu_557_bias_ce0),
    .bias_q0(b_conv2_q0),
    .out_r_address0(grp_conv2_fu_557_out_r_address0),
    .out_r_ce0(grp_conv2_fu_557_out_r_ce0),
    .out_r_we0(grp_conv2_fu_557_out_r_we0),
    .out_r_d0(grp_conv2_fu_557_out_r_d0),
    .out_r_q0(o_conv2_q0)
);

avgpooling1 grp_avgpooling1_fu_567(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_avgpooling1_fu_567_ap_start),
    .ap_done(grp_avgpooling1_fu_567_ap_done),
    .ap_idle(grp_avgpooling1_fu_567_ap_idle),
    .ap_ready(grp_avgpooling1_fu_567_ap_ready),
    .in_r_address0(grp_avgpooling1_fu_567_in_r_address0),
    .in_r_ce0(grp_avgpooling1_fu_567_in_r_ce0),
    .in_r_q0(o_relu1_q0),
    .in_r_address1(grp_avgpooling1_fu_567_in_r_address1),
    .in_r_ce1(grp_avgpooling1_fu_567_in_r_ce1),
    .in_r_q1(o_relu1_q1),
    .out_r_address0(grp_avgpooling1_fu_567_out_r_address0),
    .out_r_ce0(grp_avgpooling1_fu_567_out_r_ce0),
    .out_r_we0(grp_avgpooling1_fu_567_out_r_we0),
    .out_r_d0(grp_avgpooling1_fu_567_out_r_d0)
);

avgpooling2 grp_avgpooling2_fu_573(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_avgpooling2_fu_573_ap_start),
    .ap_done(grp_avgpooling2_fu_573_ap_done),
    .ap_idle(grp_avgpooling2_fu_573_ap_idle),
    .ap_ready(grp_avgpooling2_fu_573_ap_ready),
    .in_r_address0(grp_avgpooling2_fu_573_in_r_address0),
    .in_r_ce0(grp_avgpooling2_fu_573_in_r_ce0),
    .in_r_q0(o_relu2_q0),
    .in_r_address1(grp_avgpooling2_fu_573_in_r_address1),
    .in_r_ce1(grp_avgpooling2_fu_573_in_r_ce1),
    .in_r_q1(o_relu2_q1),
    .out_r_address0(grp_avgpooling2_fu_573_out_r_address0),
    .out_r_ce0(grp_avgpooling2_fu_573_out_r_ce0),
    .out_r_we0(grp_avgpooling2_fu_573_out_r_we0),
    .out_r_d0(grp_avgpooling2_fu_573_out_r_d0)
);

conv1 grp_conv1_fu_579(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv1_fu_579_ap_start),
    .ap_done(grp_conv1_fu_579_ap_done),
    .ap_idle(grp_conv1_fu_579_ap_idle),
    .ap_ready(grp_conv1_fu_579_ap_ready),
    .in_r_address0(grp_conv1_fu_579_in_r_address0),
    .in_r_ce0(grp_conv1_fu_579_in_r_ce0),
    .in_r_q0(image_r_q0),
    .kernel_address0(grp_conv1_fu_579_kernel_address0),
    .kernel_ce0(grp_conv1_fu_579_kernel_ce0),
    .kernel_q0(w_conv1_q0),
    .bias_address0(grp_conv1_fu_579_bias_address0),
    .bias_ce0(grp_conv1_fu_579_bias_ce0),
    .bias_q0(b_conv1_q0),
    .out_r_address0(grp_conv1_fu_579_out_r_address0),
    .out_r_ce0(grp_conv1_fu_579_out_r_ce0),
    .out_r_we0(grp_conv1_fu_579_out_r_we0),
    .out_r_d0(grp_conv1_fu_579_out_r_d0)
);

relu1 grp_relu1_fu_591(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_relu1_fu_591_ap_start),
    .ap_done(grp_relu1_fu_591_ap_done),
    .ap_idle(grp_relu1_fu_591_ap_idle),
    .ap_ready(grp_relu1_fu_591_ap_ready),
    .in_r_address0(grp_relu1_fu_591_in_r_address0),
    .in_r_ce0(grp_relu1_fu_591_in_r_ce0),
    .in_r_q0(o_conv1_q0),
    .out_r_address0(grp_relu1_fu_591_out_r_address0),
    .out_r_ce0(grp_relu1_fu_591_out_r_ce0),
    .out_r_we0(grp_relu1_fu_591_out_r_we0),
    .out_r_d0(grp_relu1_fu_591_out_r_d0)
);

relu2 grp_relu2_fu_597(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_relu2_fu_597_ap_start),
    .ap_done(grp_relu2_fu_597_ap_done),
    .ap_idle(grp_relu2_fu_597_ap_idle),
    .ap_ready(grp_relu2_fu_597_ap_ready),
    .in_r_address0(grp_relu2_fu_597_in_r_address0),
    .in_r_ce0(grp_relu2_fu_597_in_r_ce0),
    .in_r_q0(o_conv2_q0),
    .out_r_address0(grp_relu2_fu_597_out_r_address0),
    .out_r_ce0(grp_relu2_fu_597_out_r_ce0),
    .out_r_we0(grp_relu2_fu_597_out_r_we0),
    .out_r_d0(grp_relu2_fu_597_out_r_d0)
);

flatten grp_flatten_fu_603(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_flatten_fu_603_ap_start),
    .ap_done(grp_flatten_fu_603_ap_done),
    .ap_idle(grp_flatten_fu_603_ap_idle),
    .ap_ready(grp_flatten_fu_603_ap_ready),
    .in_r_address0(grp_flatten_fu_603_in_r_address0),
    .in_r_ce0(grp_flatten_fu_603_in_r_ce0),
    .in_r_q0(o_avgpooling2_q0),
    .out_r_address0(grp_flatten_fu_603_out_r_address0),
    .out_r_ce0(grp_flatten_fu_603_out_r_ce0),
    .out_r_we0(grp_flatten_fu_603_out_r_we0),
    .out_r_d0(grp_flatten_fu_603_out_r_d0)
);

Prediction_fadd_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Prediction_fadd_3bkb_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_609_p0),
    .din1(grp_fu_609_p1),
    .ce(1'b1),
    .dout(grp_fu_609_p2)
);

Prediction_fmul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Prediction_fmul_3cud_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_613_p0),
    .din1(grp_fu_613_p1),
    .ce(1'b1),
    .dout(grp_fu_613_p2)
);

Prediction_fptrunhbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
Prediction_fptrunhbi_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_617_p0),
    .ce(1'b1),
    .dout(grp_fu_617_p1)
);

Prediction_fpext_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Prediction_fpext_ibs_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_621_p0),
    .ce(1'b1),
    .dout(grp_fu_621_p1)
);

Prediction_fcmp_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
Prediction_fcmp_3dEe_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_627_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_627_p2)
);

Prediction_dadd_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Prediction_dadd_6jbC_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_690),
    .din1(reg_697),
    .ce(1'b1),
    .dout(grp_fu_634_p2)
);

Prediction_ddiv_6kbM #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Prediction_ddiv_6kbM_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_697),
    .din1(reg_690),
    .ce(1'b1),
    .dout(grp_fu_638_p2)
);

Prediction_dexp_6lbW #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Prediction_dexp_6lbW_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(grp_fu_642_p1),
    .ce(1'b1),
    .dout(grp_fu_642_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_avgpooling1_fu_567_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_avgpooling1_fu_567_ap_start_reg <= 1'b1;
        end else if ((grp_avgpooling1_fu_567_ap_ready == 1'b1)) begin
            grp_avgpooling1_fu_567_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_avgpooling2_fu_573_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_avgpooling2_fu_573_ap_start_reg <= 1'b1;
        end else if ((grp_avgpooling2_fu_573_ap_ready == 1'b1)) begin
            grp_avgpooling2_fu_573_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv1_fu_579_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_conv1_fu_579_ap_start_reg <= 1'b1;
        end else if ((grp_conv1_fu_579_ap_ready == 1'b1)) begin
            grp_conv1_fu_579_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv2_fu_557_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_conv2_fu_557_ap_start_reg <= 1'b1;
        end else if ((grp_conv2_fu_557_ap_ready == 1'b1)) begin
            grp_conv2_fu_557_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_flatten_fu_603_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_flatten_fu_603_ap_start_reg <= 1'b1;
        end else if ((grp_flatten_fu_603_ap_ready == 1'b1)) begin
            grp_flatten_fu_603_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_relu1_fu_591_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_relu1_fu_591_ap_start_reg <= 1'b1;
        end else if ((grp_relu1_fu_591_ap_ready == 1'b1)) begin
            grp_relu1_fu_591_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_relu2_fu_597_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_relu2_fu_597_ap_start_reg <= 1'b1;
        end else if ((grp_relu2_fu_597_ap_ready == 1'b1)) begin
            grp_relu2_fu_597_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_fu_844_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        i_0_i12_reg_477 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        i_0_i12_reg_477 <= i_7_reg_1314;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_fu_1019_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
        i_0_i19_reg_523 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        i_0_i19_reg_523 <= i_9_reg_1413;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        i_0_i1_reg_408 <= i_1_reg_1154;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_0_i1_reg_408 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln138_fu_1037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        i_0_i28_reg_488 <= i_8_reg_1352;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        i_0_i28_reg_488 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln121_fu_897_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        i_0_i8_reg_454 <= i_3_reg_1248;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        i_0_i8_reg_454 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln103_fu_714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        i_0_i_reg_443 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        i_0_i_reg_443 <= i_reg_1215;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        i_1_i_reg_546 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state178)) begin
        i_1_i_reg_546 <= i_10_reg_1436;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        j_0_i13_reg_466 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        j_0_i13_reg_466 <= j_1_reg_1281;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        j_0_i33_reg_512 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        j_0_i33_reg_512 <= j_2_reg_1380;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        j_0_i_reg_432 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        j_0_i_reg_432 <= j_reg_1182;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln138_fu_1037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        phi_mul2_reg_500 <= add_ln137_reg_1344;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        phi_mul2_reg_500 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        phi_mul_reg_420 <= add_ln103_reg_1146;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        phi_mul_reg_420 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_fu_1019_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
        sum_0_i_reg_534 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        sum_0_i_reg_534 <= grp_fu_617_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln103_reg_1146 <= add_ln103_fu_708_p2;
        i_1_reg_1154 <= i_1_fu_720_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        add_ln137_reg_1344 <= add_ln137_fu_1013_p2;
        i_8_reg_1352 <= i_8_fu_1025_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        b_fc1_load_reg_1174 <= b_fc1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        b_fc2_load_reg_1273 <= b_fc2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        b_fc3_load_reg_1372 <= b_fc3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        i_10_reg_1436 <= i_10_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        i_3_reg_1248 <= i_3_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        i_7_reg_1314 <= i_7_fu_947_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        i_9_reg_1413 <= i_9_fu_1088_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_reg_1215 <= i_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        icmp_ln105_reg_1187 <= icmp_ln105_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln121_fu_897_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
        icmp_ln122_reg_1286 <= icmp_ln122_fu_909_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln138_fu_1037_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        icmp_ln139_reg_1385 <= icmp_ln139_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        j_1_reg_1281 <= j_1_fu_903_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        j_2_reg_1380 <= j_2_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        j_reg_1182 <= j_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        o_fc1_addr_reg_1169 <= zext_ln105_fu_726_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        o_fc2_addr_reg_1268 <= zext_ln122_fu_891_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        o_fc3_addr_reg_1367 <= zext_ln139_fu_1031_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        o_flatten_load_1_reg_1202 <= o_flatten_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        o_flatten_load_reg_1141 <= o_flatten_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        o_relu3_load_1_reg_1301 <= o_relu3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        o_relu3_load_reg_1240 <= o_relu3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        o_relu4_load_1_reg_1400 <= o_relu4_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        o_relu4_load_reg_1339 <= o_relu4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_647 <= w_fc1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state22) | ((icmp_ln139_reg_1385 == 1'd0) & (1'b1 == ap_CS_fsm_state89)) | ((icmp_ln122_reg_1286 == 1'd0) & (1'b1 == ap_CS_fsm_state61)) | ((icmp_ln105_reg_1187 == 1'd0) & (1'b1 == ap_CS_fsm_state33)))) begin
        reg_652 <= grp_fu_613_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_658 <= grp_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((icmp_ln105_reg_1187 == 1'd0) & (1'b1 == ap_CS_fsm_state33)))) begin
        reg_662 <= o_fc1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state46))) begin
        reg_668 <= w_fc2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) | ((icmp_ln122_reg_1286 == 1'd0) & (1'b1 == ap_CS_fsm_state61)))) begin
        reg_673 <= o_fc2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state74))) begin
        reg_679 <= w_fc3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state97) | ((icmp_ln139_reg_1385 == 1'd0) & (1'b1 == ap_CS_fsm_state89)))) begin
        reg_684 <= o_fc3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state98))) begin
        reg_690 <= grp_fu_621_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state116))) begin
        reg_697 <= grp_fu_642_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        select_ln105_reg_1207 <= select_ln105_fu_770_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        select_ln122_reg_1306 <= select_ln122_fu_934_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        select_ln139_reg_1405 <= select_ln139_fu_1075_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_fu_844_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        sub_ln122_reg_1253[14 : 3] <= sub_ln122_fu_880_p2[14 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        tmp_4_i_reg_1423 <= grp_fu_634_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        tmp_4_reg_1235 <= grp_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        tmp_6_i_reg_1451 <= grp_fu_621_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        tmp_6_reg_1334 <= grp_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state176)) begin
        trunc_ln368_reg_1456 <= trunc_ln368_fu_1120_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        zext_ln114_reg_1220[6 : 0] <= zext_ln114_fu_789_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_fu_941_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state68))) begin
        zext_ln131_reg_1319[6 : 0] <= zext_ln131_fu_953_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_fu_1099_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state125))) begin
        zext_ln152_reg_1441[3 : 0] <= zext_ln152_fu_1111_p1[3 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln151_fu_1099_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state125))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln151_fu_1099_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state125))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        b_fc1_ce0 = 1'b1;
    end else begin
        b_fc1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        b_fc2_ce0 = 1'b1;
    end else begin
        b_fc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        b_fc3_ce0 = 1'b1;
    end else begin
        b_fc3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_609_p0 = reg_684;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_609_p0 = reg_673;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_609_p0 = reg_662;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_fu_609_p0 = reg_652;
    end else begin
        grp_fu_609_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_609_p1 = b_fc3_load_reg_1372;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_609_p1 = b_fc2_load_reg_1273;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_609_p1 = reg_652;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_609_p1 = b_fc1_load_reg_1174;
    end else begin
        grp_fu_609_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state75))) begin
        grp_fu_613_p0 = reg_679;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_613_p0 = reg_668;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_fu_613_p0 = reg_647;
    end else begin
        grp_fu_613_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_613_p1 = o_relu4_load_1_reg_1400;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_613_p1 = o_relu4_load_reg_1339;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_613_p1 = o_relu3_load_1_reg_1301;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_613_p1 = o_relu3_load_reg_1240;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_613_p1 = o_flatten_load_1_reg_1202;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_613_p1 = o_flatten_load_reg_1141;
    end else begin
        grp_fu_613_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state177)) begin
        grp_fu_617_p0 = bitcast_ln512_fu_1131_p1;
    end else if ((1'b1 == ap_CS_fsm_state122)) begin
        grp_fu_617_p0 = tmp_4_i_reg_1423;
    end else begin
        grp_fu_617_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        grp_fu_621_p0 = sum_0_i_reg_534;
    end else if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state97))) begin
        grp_fu_621_p0 = o_fc3_q0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_621_p0 = ap_phi_mux_sum_0_i_phi_fu_538_p4;
    end else begin
        grp_fu_621_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_627_p0 = o_fc2_q0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_627_p0 = o_fc1_q0;
    end else begin
        grp_fu_627_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_fu_642_p1 = tmp_6_i_reg_1451;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_642_p1 = reg_690;
    end else begin
        grp_fu_642_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        o_avgpooling1_address0 = grp_avgpooling1_fu_567_out_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        o_avgpooling1_address0 = grp_conv2_fu_557_in_r_address0;
    end else begin
        o_avgpooling1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        o_avgpooling1_ce0 = grp_avgpooling1_fu_567_out_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        o_avgpooling1_ce0 = grp_conv2_fu_557_in_r_ce0;
    end else begin
        o_avgpooling1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        o_avgpooling1_we0 = grp_avgpooling1_fu_567_out_r_we0;
    end else begin
        o_avgpooling1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        o_avgpooling2_address0 = grp_flatten_fu_603_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        o_avgpooling2_address0 = grp_avgpooling2_fu_573_out_r_address0;
    end else begin
        o_avgpooling2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        o_avgpooling2_ce0 = grp_flatten_fu_603_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        o_avgpooling2_ce0 = grp_avgpooling2_fu_573_out_r_ce0;
    end else begin
        o_avgpooling2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        o_avgpooling2_we0 = grp_avgpooling2_fu_573_out_r_we0;
    end else begin
        o_avgpooling2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        o_conv1_address0 = grp_relu1_fu_591_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        o_conv1_address0 = grp_conv1_fu_579_out_r_address0;
    end else begin
        o_conv1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        o_conv1_ce0 = grp_relu1_fu_591_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        o_conv1_ce0 = grp_conv1_fu_579_out_r_ce0;
    end else begin
        o_conv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        o_conv1_we0 = grp_conv1_fu_579_out_r_we0;
    end else begin
        o_conv1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        o_conv2_address0 = grp_relu2_fu_597_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        o_conv2_address0 = grp_conv2_fu_557_out_r_address0;
    end else begin
        o_conv2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        o_conv2_ce0 = grp_relu2_fu_597_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        o_conv2_ce0 = grp_conv2_fu_557_out_r_ce0;
    end else begin
        o_conv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        o_conv2_we0 = grp_conv2_fu_557_out_r_we0;
    end else begin
        o_conv2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        o_fc1_address0 = zext_ln114_fu_789_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state32))) begin
        o_fc1_address0 = o_fc1_addr_reg_1169;
    end else begin
        o_fc1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32))) begin
        o_fc1_ce0 = 1'b1;
    end else begin
        o_fc1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        o_fc1_we0 = 1'b1;
    end else begin
        o_fc1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        o_fc2_address0 = zext_ln131_fu_953_p1;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state60))) begin
        o_fc2_address0 = o_fc2_addr_reg_1268;
    end else begin
        o_fc2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state60))) begin
        o_fc2_ce0 = 1'b1;
    end else begin
        o_fc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        o_fc2_we0 = 1'b1;
    end else begin
        o_fc2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        o_fc3_address0 = zext_ln152_fu_1111_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        o_fc3_address0 = zext_ln149_fu_1094_p1;
    end else if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state88))) begin
        o_fc3_address0 = o_fc3_addr_reg_1367;
    end else begin
        o_fc3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state88))) begin
        o_fc3_ce0 = 1'b1;
    end else begin
        o_fc3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        o_fc3_we0 = 1'b1;
    end else begin
        o_fc3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        o_flatten_address0 = zext_ln106_fu_750_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        o_flatten_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        o_flatten_address0 = grp_flatten_fu_603_out_r_address0;
    end else begin
        o_flatten_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state15))) begin
        o_flatten_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        o_flatten_ce0 = grp_flatten_fu_603_out_r_ce0;
    end else begin
        o_flatten_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        o_flatten_we0 = grp_flatten_fu_603_out_r_we0;
    end else begin
        o_flatten_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        o_relu1_address0 = grp_relu1_fu_591_out_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        o_relu1_address0 = grp_avgpooling1_fu_567_in_r_address0;
    end else begin
        o_relu1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        o_relu1_ce0 = grp_relu1_fu_591_out_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        o_relu1_ce0 = grp_avgpooling1_fu_567_in_r_ce0;
    end else begin
        o_relu1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        o_relu1_ce1 = grp_avgpooling1_fu_567_in_r_ce1;
    end else begin
        o_relu1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        o_relu1_we0 = grp_relu1_fu_591_out_r_we0;
    end else begin
        o_relu1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        o_relu2_address0 = grp_relu2_fu_597_out_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        o_relu2_address0 = grp_avgpooling2_fu_573_in_r_address0;
    end else begin
        o_relu2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        o_relu2_ce0 = grp_relu2_fu_597_out_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        o_relu2_ce0 = grp_avgpooling2_fu_573_in_r_ce0;
    end else begin
        o_relu2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        o_relu2_ce1 = grp_avgpooling2_fu_573_in_r_ce1;
    end else begin
        o_relu2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        o_relu2_we0 = grp_relu2_fu_597_out_r_we0;
    end else begin
        o_relu2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        o_relu3_address0 = zext_ln123_fu_915_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        o_relu3_address0 = zext_ln114_reg_1220;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        o_relu3_address0 = 64'd0;
    end else begin
        o_relu3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state40))) begin
        o_relu3_ce0 = 1'b1;
    end else begin
        o_relu3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        o_relu3_we0 = 1'b1;
    end else begin
        o_relu3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        o_relu4_address0 = zext_ln140_fu_1055_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        o_relu4_address0 = zext_ln131_reg_1319;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        o_relu4_address0 = 64'd0;
    end else begin
        o_relu4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state68))) begin
        o_relu4_ce0 = 1'b1;
    end else begin
        o_relu4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        o_relu4_we0 = 1'b1;
    end else begin
        o_relu4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state178)) begin
        probs_ce0 = 1'b1;
    end else begin
        probs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state178)) begin
        probs_we0 = 1'b1;
    end else begin
        probs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        w_fc1_address0 = zext_ln106_2_fu_765_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        w_fc1_address0 = zext_ln103_fu_703_p1;
    end else begin
        w_fc1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17))) begin
        w_fc1_ce0 = 1'b1;
    end else begin
        w_fc1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        w_fc2_address0 = sext_ln123_fu_929_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        w_fc2_address0 = sext_ln122_fu_886_p1;
    end else begin
        w_fc2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state45))) begin
        w_fc2_ce0 = 1'b1;
    end else begin
        w_fc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        w_fc3_address0 = zext_ln140_2_fu_1070_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        w_fc3_address0 = zext_ln137_fu_1008_p1;
    end else begin
        w_fc3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state73))) begin
        w_fc3_ce0 = 1'b1;
    end else begin
        w_fc3_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_conv1_fu_579_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_relu1_fu_591_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_avgpooling1_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_conv2_fu_557_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_relu2_fu_597_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_avgpooling2_fu_573_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_flatten_fu_603_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln103_fu_714_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln104_fu_732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state40 : begin
            if (((icmp_ln113_fu_777_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln120_fu_844_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((icmp_ln121_fu_897_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state68 : begin
            if (((icmp_ln130_fu_941_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((icmp_ln137_fu_1019_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((icmp_ln138_fu_1037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state96 : begin
            if (((icmp_ln148_fu_1082_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state96))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            if (((icmp_ln151_fu_1099_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state125))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_fu_708_p2 = (phi_mul_reg_420 + 16'd400);

assign add_ln106_fu_759_p2 = (phi_mul_reg_420 + zext_ln106_1_fu_755_p1);

assign add_ln123_fu_924_p2 = ($signed(sub_ln122_reg_1253) + $signed(zext_ln123_1_fu_920_p1));

assign add_ln137_fu_1013_p2 = (phi_mul2_reg_500 + 10'd84);

assign add_ln140_fu_1064_p2 = (phi_mul2_reg_500 + zext_ln140_1_fu_1060_p1);

assign and_ln114_fu_830_p2 = (tmp_4_reg_1235 & or_ln114_fu_824_p2);

assign and_ln131_fu_994_p2 = (tmp_6_reg_1334 & or_ln131_fu_988_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state176 = ap_CS_fsm[32'd175];

assign ap_CS_fsm_state177 = ap_CS_fsm[32'd176];

assign ap_CS_fsm_state178 = ap_CS_fsm[32'd177];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_phi_mux_sum_0_i_phi_fu_538_p4 = sum_0_i_reg_534;

assign b_conv1_address0 = grp_conv1_fu_579_bias_address0;

assign b_conv1_ce0 = grp_conv1_fu_579_bias_ce0;

assign b_conv2_address0 = grp_conv2_fu_557_bias_address0;

assign b_conv2_ce0 = grp_conv2_fu_557_bias_ce0;

assign b_fc1_address0 = zext_ln105_fu_726_p1;

assign b_fc2_address0 = zext_ln122_fu_891_p1;

assign b_fc3_address0 = zext_ln139_fu_1031_p1;

assign bitcast_ln114_fu_794_p1 = reg_662;

assign bitcast_ln131_fu_958_p1 = reg_673;

assign bitcast_ln512_fu_1131_p1 = p_Result_s_fu_1124_p3;

assign grp_avgpooling1_fu_567_ap_start = grp_avgpooling1_fu_567_ap_start_reg;

assign grp_avgpooling2_fu_573_ap_start = grp_avgpooling2_fu_573_ap_start_reg;

assign grp_conv1_fu_579_ap_start = grp_conv1_fu_579_ap_start_reg;

assign grp_conv2_fu_557_ap_start = grp_conv2_fu_557_ap_start_reg;

assign grp_flatten_fu_603_ap_start = grp_flatten_fu_603_ap_start_reg;

assign grp_relu1_fu_591_ap_start = grp_relu1_fu_591_ap_start_reg;

assign grp_relu2_fu_597_ap_start = grp_relu2_fu_597_ap_start_reg;

assign i_10_fu_1105_p2 = (i_1_i_reg_546 + 4'd1);

assign i_1_fu_720_p2 = (i_0_i1_reg_408 + 7'd1);

assign i_3_fu_850_p2 = (i_0_i8_reg_454 + 7'd1);

assign i_7_fu_947_p2 = (i_0_i12_reg_477 + 7'd1);

assign i_8_fu_1025_p2 = (i_0_i28_reg_488 + 4'd1);

assign i_9_fu_1088_p2 = (i_0_i19_reg_523 + 4'd1);

assign i_fu_783_p2 = (i_0_i_reg_443 + 7'd1);

assign icmp_ln103_fu_714_p2 = ((i_0_i1_reg_408 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_732_p2 = ((j_0_i_reg_432 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_744_p2 = ((j_0_i_reg_432 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_777_p2 = ((i_0_i_reg_443 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln114_1_fu_818_p2 = ((trunc_ln114_fu_808_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_812_p2 = ((tmp_3_fu_798_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_844_p2 = ((i_0_i8_reg_454 == 7'd84) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_897_p2 = ((j_0_i13_reg_466 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_909_p2 = ((j_0_i13_reg_466 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_941_p2 = ((i_0_i12_reg_477 == 7'd84) ? 1'b1 : 1'b0);

assign icmp_ln131_1_fu_982_p2 = ((trunc_ln131_fu_972_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_976_p2 = ((tmp_5_fu_962_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_1019_p2 = ((i_0_i28_reg_488 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_1037_p2 = ((j_0_i33_reg_512 == 7'd84) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_1049_p2 = ((j_0_i33_reg_512 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_1082_p2 = ((i_0_i19_reg_523 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_1099_p2 = ((i_1_i_reg_546 == 4'd10) ? 1'b1 : 1'b0);

assign image_r_address0 = grp_conv1_fu_579_in_r_address0;

assign image_r_ce0 = grp_conv1_fu_579_in_r_ce0;

assign j_1_fu_903_p2 = (j_0_i13_reg_466 + 7'd1);

assign j_2_fu_1043_p2 = (j_0_i33_reg_512 + 7'd1);

assign j_fu_738_p2 = (j_0_i_reg_432 + 9'd1);

assign o_relu3_d0 = ((and_ln114_fu_830_p2[0:0] === 1'b1) ? 32'd0 : reg_662);

assign o_relu4_d0 = ((and_ln131_fu_994_p2[0:0] === 1'b1) ? 32'd0 : reg_673);

assign or_ln114_fu_824_p2 = (icmp_ln114_fu_812_p2 | icmp_ln114_1_fu_818_p2);

assign or_ln131_fu_988_p2 = (icmp_ln131_fu_976_p2 | icmp_ln131_1_fu_982_p2);

assign p_Result_s_fu_1124_p3 = {{1'd0}, {trunc_ln368_reg_1456}};

assign p_Val2_s_fu_1116_p1 = grp_fu_638_p2;

assign probs_address0 = zext_ln152_reg_1441;

assign probs_d0 = grp_fu_617_p1;

assign select_ln105_fu_770_p3 = ((icmp_ln105_reg_1187[0:0] === 1'b1) ? reg_658 : grp_fu_609_p2);

assign select_ln122_fu_934_p3 = ((icmp_ln122_reg_1286[0:0] === 1'b1) ? reg_658 : grp_fu_609_p2);

assign select_ln139_fu_1075_p3 = ((icmp_ln139_reg_1385[0:0] === 1'b1) ? reg_658 : grp_fu_609_p2);

assign sext_ln122_fu_886_p1 = sub_ln122_fu_880_p2;

assign sext_ln123_fu_929_p1 = $signed(add_ln123_fu_924_p2);

assign sub_ln122_fu_880_p2 = (zext_ln122_1_fu_864_p1 - zext_ln122_2_fu_876_p1);

assign tmp_15_fu_868_p3 = {{i_0_i8_reg_454}, {3'd0}};

assign tmp_3_fu_798_p4 = {{bitcast_ln114_fu_794_p1[30:23]}};

assign tmp_5_fu_962_p4 = {{bitcast_ln131_fu_958_p1[30:23]}};

assign tmp_s_fu_856_p3 = {{i_0_i8_reg_454}, {7'd0}};

assign trunc_ln114_fu_808_p1 = bitcast_ln114_fu_794_p1[22:0];

assign trunc_ln131_fu_972_p1 = bitcast_ln131_fu_958_p1[22:0];

assign trunc_ln368_fu_1120_p1 = p_Val2_s_fu_1116_p1[62:0];

assign w_conv1_address0 = grp_conv1_fu_579_kernel_address0;

assign w_conv1_ce0 = grp_conv1_fu_579_kernel_ce0;

assign w_conv2_address0 = grp_conv2_fu_557_kernel_address0;

assign w_conv2_ce0 = grp_conv2_fu_557_kernel_ce0;

assign zext_ln103_fu_703_p1 = phi_mul_reg_420;

assign zext_ln105_fu_726_p1 = i_0_i1_reg_408;

assign zext_ln106_1_fu_755_p1 = j_0_i_reg_432;

assign zext_ln106_2_fu_765_p1 = add_ln106_fu_759_p2;

assign zext_ln106_fu_750_p1 = j_0_i_reg_432;

assign zext_ln114_fu_789_p1 = i_0_i_reg_443;

assign zext_ln122_1_fu_864_p1 = tmp_s_fu_856_p3;

assign zext_ln122_2_fu_876_p1 = tmp_15_fu_868_p3;

assign zext_ln122_fu_891_p1 = i_0_i8_reg_454;

assign zext_ln123_1_fu_920_p1 = j_0_i13_reg_466;

assign zext_ln123_fu_915_p1 = j_0_i13_reg_466;

assign zext_ln131_fu_953_p1 = i_0_i12_reg_477;

assign zext_ln137_fu_1008_p1 = phi_mul2_reg_500;

assign zext_ln139_fu_1031_p1 = i_0_i28_reg_488;

assign zext_ln140_1_fu_1060_p1 = j_0_i33_reg_512;

assign zext_ln140_2_fu_1070_p1 = add_ln140_fu_1064_p2;

assign zext_ln140_fu_1055_p1 = j_0_i33_reg_512;

assign zext_ln149_fu_1094_p1 = i_0_i19_reg_523;

assign zext_ln152_fu_1111_p1 = i_1_i_reg_546;

always @ (posedge ap_clk) begin
    zext_ln114_reg_1220[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    sub_ln122_reg_1253[2:0] <= 3'b000;
    zext_ln131_reg_1319[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1441[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //Prediction
